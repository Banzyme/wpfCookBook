<UserControl x:Class="WPFCookBook.Views.IndexView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WPFCookBook.Views"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40*" />
            <RowDefinition Height="60*" />
        </Grid.RowDefinitions>

        <WrapPanel Grid.Row="0">
            <RichTextBox Margin="10"
                         HorizontalAlignment="Center"
                         Padding="5">
                <FlowDocument>
                    <Paragraph FontSize="36">Welcome to WPF - The Essential Guide</Paragraph>

                    <Paragraph>
                        <Span FontWeight="Bold">WPF - Windows Presentation Foundation</Span>
                        is a "unified platform for desktop application development" on Microsoft Windows.
                        It is an alternative development framework alongside UWP and Winforms which use 
                        C# and XAML to build desktop application for Windows 7 - 10x.
                        <LineBreak />
                        <LineBreak />
                        <Span FontWeight="Bold">Which one is better ?</Span> Well that depends, If you are targetting 
                        Desktop application WPF is ideal(our opinion). 
                        
                        Microsoft on the othe had recommmens UWP(Universal Windows Platform) since it can target all 
                        windows platforms including mobile devices, smart tvs and tablets. Despite this, WPF remains popular 
                        due to its stability and ease of use. It t is likely that the adoption of UWP will grow steadily 
                        as consumers are continously using more mobile gadgets.

                    </Paragraph>

                    <Paragraph>
                        This guide will cover the core concepts in WPF with a strong focus on the
                        <Span FontWeight="Bold">MVVM pattern</Span> due to its advantages ranging  from maintainablity, scalability
                        and testability among many others. Furthermore, relevant C# concepts such as delegates and events wll be revisited 
                        due to their eminence in the MVVM pattern. The guide is divided into modules that contain multiple subjects and the 
                        corresponding content for each of the subjects.
                    </Paragraph>

                    <Paragraph>
                        A typical WPF application is made up of the Main window, then Layout Panels followd by 
                        UI elements such as buttons or textboxes as shown in Fig. 1.1.
                        <LineBreak /> 
                        In the MVVM arvhitecure each page shown on the window has a viewmodel which 
                        holds the state of the page and respond to UI interactions. There are many flavours of 
                        the MVVM pattern. Fig 1.2. shows the recipe used to create this application.
                    </Paragraph>

                    <Paragraph Foreground="Blue" FontStyle="Italic">
                        Click on any of the modules on the left to learn more about WPF!
                    </Paragraph>

                    <Paragraph TextAlignment="Left"
                               FontSize="8"
                               Foreground="Gray">
                        This guide was prepared by the folks at Peculia.dev to help you get started 
                    quickly with developing Apps on WPf.
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>
        </WrapPanel>
        <StackPanel HorizontalAlignment="Center"
                    Orientation="Horizontal"
                   Grid.Row="1">


            <Grid Width="Auto">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Image x:Name="WPFArchOverview"
                       Grid.Row="0"
                       HorizontalAlignment="Center"
                       Source="/WPFCookBook;component/Assets/diagrams/wpf_sample_app.png"
                       />
                <Label Grid.Row="1"
                       FontSize="8" Margin="0,0,0,10" Content="Fig. 1.1. WPF Sample Application overview" />
            </Grid>

            <Grid Width="Auto">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Image x:Name="CurrentOverview"
                       Grid.Row="0"
                       Margin="20,0,0,0"
                       HorizontalAlignment="Center"
                       Source="/WPFCookBook;component/Assets/diagrams/wpf_mvvm_sample.png"
                        />
                <Label FontSize="8"
                       Margin="0,0,0,10"
                       Grid.Row="1" Content="Fig. 1.2. Sample MVVM Application" />
            </Grid>


        </StackPanel>


    </Grid>
</UserControl>
